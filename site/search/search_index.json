{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Stock Transformers Documentation","text":"<p>Welcome to the Stock Transformers Documentation \u2013 a comprehensive guide for building stock prediction models </p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ol> <li>Project Overview</li> <li>Mini Project</li> <li>Time Series Analysis</li> <li>Time2Vec</li> <li>LSTM</li> <li>Feature Engineering</li> <li>Transformer</li> <li>Informer</li> <li>Challenges Faced</li> <li>Conclusion</li> </ol>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>GitHub Repository: Stock Transformers</li> </ul>"},{"location":"LSTM/","title":"LSTM","text":""},{"location":"LSTM/#what-is-lstm","title":"What is LSTM ?","text":"<p>Long Short-Term Memory (LSTM) is a type of recurrent neural network (RNN) that can process and analyze sequential data, such as text, speech, and time series. LSTMs are well-suited for problems involving large data sequences and can identify both short-term and long-term dependencies.</p>"},{"location":"LSTM/#why-lstm-for-stock-predictions","title":"Why LSTM for stock predictions ?","text":"<ul> <li> <p>Long Short-Term Memory (LSTM) is a type of recurrent neural network (RNN) that can process and analyze sequential data, such as time series. \u200b</p> </li> <li> <p>Stock prices, are non-stationary and exhibit trends and seasonality. LSTMs can handle these non-linear relationships within the data.\u200b</p> </li> <li> <p>LSTM's can learn long and short term dependencies by selectively retaining information through the memory cell and gates.\u200b</p> </li> <li> <p>Our LSTM model takes 5 features namely, Open, High, Low, Adjusted close and Volume and label is the Closing Price .</p> </li> </ul>"},{"location":"LSTM/#lstm-model-layers","title":"LSTM model layers","text":"<pre><code>model=Sequential()\nmodel.add(LSTM(64,return_sequences=False,input_shape = (X_train.shape[1],X_train.shape[2])))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(20))\nmodel.add(Dense(1))\nmodel.compile(optimizer=Adam(learning_rate=0.001), loss='mean_squared_error')\nhistory=model.fit(X_train,y_train, batch_size = 128,epochs = 100,validation_split=0.2, verbose=1)\n</code></pre>"},{"location":"LSTM/#graph-for-a-stock-closing-price-predicition","title":"Graph for a stock closing price predicition","text":""},{"location":"LSTM/#tcs-stock","title":"TCS STOCK","text":""},{"location":"challenges_faced/","title":"Challenges Faced","text":""},{"location":"challenges_faced/#lstms","title":"LSTM's","text":"<ul> <li>Figuring out which features to use for feature engineering which would produce best results</li> <li>Experimenting with hgih volatile stocks for which LSTM doesnt give good results</li> </ul>"},{"location":"challenges_faced/#transformers","title":"Transformers","text":"<ul> <li>Not producing expected results for either of the stocks so we had to figure out the reason behinf why transformers failed in doing so</li> </ul>"},{"location":"challenges_faced/#informers","title":"Informers","text":"<ul> <li>Understanding the code as only one official resource was available</li> <li>Deciding parameters for the best predictions</li> <li>Figuring out best results for daily predictions </li> </ul>"},{"location":"feature_engineering/","title":"Feature Engineering","text":""},{"location":"feature_engineering/#what-is-feature-engineering","title":"What is feature engineering?","text":"<p>Feature engineering is the process of selecting, manipulating and transforming raw data into features that can be used in supervised learning.</p> <p>It requires using domain knowledge to select and transform the most relevant variables</p> <p>The goal of feature engineering and selection is to improve the performance of machine learning (ML) algorithms.</p>"},{"location":"feature_engineering/#steps-invlolved","title":"Steps invlolved","text":""},{"location":"feature_engineering/#data-preparation","title":"Data preparation","text":"<p>We have used yfinance which is a popular open source Python library that provides access to financial data on Yahoo Finance. This gave us a dataset with conventional features like open,high,low,close,volume.</p>"},{"location":"feature_engineering/#exploratory-analysis","title":"Exploratory Analysis","text":"<p>This is used to identify and summarize the main characteristics in a data set through data analysis. It helps in choosing the right features for a model.</p> <p>For our prediction , we realized that momentum and volatility are two main charcteristics of a stock that significantly affect fluctuation in prices. Hence we proceeded to choose 3 indicators to be added into our dataset.</p>"},{"location":"feature_engineering/#features-added","title":"Features added","text":""},{"location":"feature_engineering/#rsi-relative-strength-index","title":"RSI - Relative Strength Index","text":"<p>The relative strength index (RSI) is a momentum indicator used in technical analysis. RSI measures the speed and magnitude of a security's recent price changes to detect overvalued or undervalued conditions in the price of that security.</p> <p>On a scale of 0 to 100, RSI reading of 70 or above indicates an overbought condition. A reading of 30 or below indicates an oversold condition.</p>"},{"location":"feature_engineering/#roc-rate-of-change","title":"ROC - rate of change","text":"<p>The price rate of change (ROC) is a momentum-based technical indicator that measures the percentage change in price between the current price and the price a certain number of periods ago.</p> <p>The ROC indicator is plotted against zero, with the indicator moving upwards into positive territory if price changes are to the upside, and moving into negative territory if price changes are to the downside.</p> <p>It can be used to spot divergences, overbought and oversold conditions, and centerline crossovers.</p>"},{"location":"feature_engineering/#bollinger-bands","title":"Bollinger bands","text":"<p>Bollinger Bands help gauge the volatility of stocks to determine if they are over or undervalued.</p> <p>Bands appear on stock charts as three lines that move with the price. The center line is the stock price's 20-day simple moving average (SMA). The upper and lower bands are set at a certain number of standard deviations, usually two, above and below the middle line.</p>"},{"location":"feature_engineering/#sample-dataset","title":"Sample dataset","text":""},{"location":"home/","title":"Welcome to Stock Transformers !","text":"<p>Mentees - Khush Agarwal, Yashvi Mehta, Ghruank Kothare  Mentors - Tvisha Vedat, Kindipsingh Malhi</p>"},{"location":"home/#project-idea","title":"Project Idea","text":"<p>In the modern capital market, the price of a stock is often considered to be highly volatile and unpredictable because of various social, financial, political and other dynamic factors that can bring catastrophic financial loss to the investors. This project aims to predict stock prices using transformer architecture by utilising the concept of time series forecasting.</p> <p>The transformer model has been widely leveraged for natural language processing and computer vision tasks,but is less frequently used for tasks like stock prices prediction. The introduction of time2vec encoding to represent the time series features has made it possible to employ the transformer model for the stock price prediction. We aim to leverage these two effective techniques to discover forecasting ability on volatile stock markets.</p>"},{"location":"home/#overview","title":"Overview","text":"<p>In this project :</p> <ul> <li>We have classified stocks into 2 categories, volatile and non-volatile. </li> <li>For each of them we worked on 3 models namely , LSTM, transformer and informer.</li> <li>We perfomed feature engineering and time2vec to create our datasets.</li> <li>Our models predict the closing price of a stock on a day based on data of previous 100 days.</li> <li>Finally, we concluded it by comparing results across all models and determining which one had the best accuracy.</li> </ul>"},{"location":"informer/","title":"Informer","text":""},{"location":"informer/#what-is-informer","title":"What is informer ?","text":"<p>Informer is a time series model which is a part of the Transformer family.\u200b</p> <p>It\u2019s a transformer based model designed for Long sequence time-series forecasting (LSTF). Informer has shown a remarkable ability to capture both long-term patterns and short-term fluctuations. </p>"},{"location":"informer/#informer-architechture","title":"Informer architechture","text":""},{"location":"informer/#advantage-over-transformers","title":"Advantage over transformers","text":"<p>Informer solves two major problems of a transformer</p> <p>1.Quadratic Time Complexity of Attention Mechanism\u200b</p> <p>By using probSparse attention, informer reduces the time complexity of the attention mechanism from quadratic to O(n logn). Instead of each token attending to every other token, they restrict attention to a limited number of relevant tokens,\u200b</p> <p>2.Memory Bottleneck of stacking layers for long inputs\u200b</p> <p>Distillation is a technique which chooses only the active queries from the probSparse and reduces the space required by the subsequent layer. Thus it can further enhance memory efficiency.\u200b</p>"},{"location":"informer/#informer-predictions","title":"Informer predictions","text":""},{"location":"informer/#daily-predictions-for-infosys-stock","title":"Daily predictions for Infosys Stock","text":""},{"location":"informer/#daily-prediction-for-apple-stock","title":"Daily prediction for Apple stock","text":""},{"location":"informer/#hourly-prediction-for-adani-stock","title":"Hourly prediction for Adani stock","text":""},{"location":"mini%20project/","title":"Mini Project","text":""},{"location":"mini%20project/#univariate-time-series-forecasting","title":"Univariate time series forecasting","text":"<p>Mini project is based on univariate time series forecasting where we predic the milk production in a month based on data of milk productions in previous 3 months.</p>"},{"location":"mini%20project/#loss-graph","title":"Loss graph","text":""},{"location":"mini%20project/#predicted-vs-actual","title":"Predicted vs Actual","text":""},{"location":"time_series/","title":"Time Series","text":""},{"location":"time_series/#what-is-time-series-forecasting","title":"What is time series forecasting","text":"<p>Time series forecasting is a statistical or machine learning technique that uses historical and current data to predict future values over a period of time or a specific point in the future. It involves building models from historical data and using them to make observations</p> <p>Forecasting has a range of applications in various industries especially the stock market!</p>"},{"location":"time_series/#key-features","title":"Key features","text":"<ul> <li>Time Series Data- A sequence of data points collected or recorded at regular time intervals, such as daily stock prices.</li> <li>Trends- Long-term movement of data in a certain direction, which can be upward (bullish), downward (bearish), or flat.</li> <li>Seasonality- Repeating short-term patterns within the data, often influenced by specific time periods like quarters or months.</li> <li>Stationarity- A stationary time series has properties like mean and variance that do not change over time, which is essential for many forecasting models.</li> </ul>"}]}